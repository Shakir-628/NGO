@model NGO_Project.User

@{
    Layout = null;
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Login - Helping Hands</title>
    <link rel="icon" type="image/png" href="~/assets/img/logo/HelpingHands.png" />

    <!-- Fonts & Styles -->
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet" />
    <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" />

    <style>
        body {
            font-family: 'Roboto', sans-serif;
            background-color: #f0f2f5;
            display: flex;
            justify-content: center;
            align-items: flex-start;
            min-height: 100vh;
            margin: 0;
            padding: 40px 20px;
        }

        .container {
            background-color: #fff;
            border-radius: 10px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            padding: 40px;
            max-width: 600px;
            width: 100%;
        }

        .header-section {
            text-align: center;
        }

        .logo-wrapper img {
            height: 80px;
            margin-bottom: 10px;
        }

        .header-section h1 {
            font-size: 1.8em;
            color: #007bff;
            margin-top: 0;
        }

        .header-section h2 {
            font-size: 1.1em;
            color: #495057;
        }

        .login-card {
            background-color: #f8f9fa;
            border-radius: 8px;
            padding: 30px;
            margin-top: 30px;
        }

        .tab-buttons {
            display: flex;
            justify-content: center;
            margin-bottom: 20px;
        }

        .tab-button {
            padding: 10px 20px;
            cursor: pointer;
            background-color: #e9ecef;
            border: 1px solid #007bff;
            color: #495057;
            border-radius: 0;
        }

            .tab-button.active {
                background-color: #007bff;
                color: white;
            }

        .tab-content {
            display: none;
        }

            .tab-content.active {
                display: block;
            }

        .form-group {
            margin-bottom: 20px;
            text-align: left;
        }

            .form-group label {
                font-weight: bold;
            }

        .form-control {
            width: 100%;
            padding: 10px;
            border-radius: 5px;
        }

        .login-button {
            width: 100%;
            padding: 12px;
            background-color: #28a745;
            color: white;
            border: none;
            border-radius: 5px;
            font-weight: bold;
            cursor: pointer;
        }

            .login-button:hover {
                background-color: #218838;
            }

        .signup-link {
            margin-top: 20px;
            font-size: 0.95em;
            text-align: center;
        }

            .signup-link a {
                color: #007bff;
                text-decoration: none;
            }

                .signup-link a:hover {
                    text-decoration: underline;
                }

        .text-danger {
            font-size: 0.85em;
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="header-section mb-4">
            <div class="logo-wrapper d-flex justify-content-center">
                <img src="~/assets/img/logo/HelpingHands.jpg" alt="Logo" />
            </div>
            <h1 class="text-success fw-bold">Helping Hands</h1>
            <h2>Bridging the gap between community needs and donor contributions</h2>
            <p>Your platform for seamless aid management.</p>
        </div>

        <div class="login-card">
            <h3 class="text-center">Login</h3>

            <!-- Toggle Buttons -->
            <div class="tab-buttons">
                <button class="tab-button btn-success active" data-tab="donor">Donor</button>
                <button class="tab-button btn-success" data-tab="ngo">NGO</button>
            </div>

            <!-- Donor Login Form -->
            <div id="donor-content" class="tab-content active">
                @using (Html.BeginForm("Login", "Users", FormMethod.Post, new { id = "donorForm" }))
                {
                    @Html.AntiForgeryToken()
                    @Html.Hidden("Type", "Donor")

                    <div class="form-group">
                        @Html.Label("User Name")
                        @Html.TextBoxFor(m => m.Username, new { @class = "form-control", id = "Username", maxlength = "30", minlength = "10" })
                        <span class="text-danger" id="donorUsernameError"></span>
                    </div>

                    <div class="form-group">
                        @Html.Label("Password")
                        <div class="input-group">
                            @Html.PasswordFor(m => m.Password, new { @class = "form-control", placeholder = "••••••••", maxlength = "30", minlength = "10", id = "Password" })
                            <div class="input-group-append">
                                <span class="input-group-text" id="togglePassword" style="cursor: pointer;">
                                    <i id="eyeIcon" class="fa fa-eye"></i>
                                </span>
                            </div>
                        </div>
                        <span class="text-danger" id="donorPasswordError"></span>
                    </div>

                    <button type="submit" class="login-button">Login</button>
                }
            </div>

            <!-- NGO Login Form -->
            <div id="ngo-content" class="tab-content">
                @using (Html.BeginForm("Login", "Users", FormMethod.Post, new { id = "ngoForm" }))
                {
                    @Html.AntiForgeryToken()
                    @Html.Hidden("Type", "NGO")

                    <div class="form-group">
                        @Html.Label("User Name")
                        @Html.TextBoxFor(m => m.Username, new { @class = "form-control", id = "NGOUsername", maxlength = "30", minlength = "10" })
                        <span class="text-danger" id="ngoUsernameError"></span>
                    </div>

                    <div class="form-group">
                        @Html.Label("Password")
                        <div class="input-group">
                            @Html.PasswordFor(m => m.Password, new { @class = "form-control", placeholder = "••••••••", maxlength = "15", minlength = "10", id = "NGOPassword" })
                            <div class="input-group-append">
                                <span class="input-group-text" id="toggleNGOPassword" style="cursor: pointer;">
                                    <i id="ngoEyeIcon" class="fa fa-eye"></i>
                                </span>
                            </div>
                        </div>
                        <span class="text-danger" id="ngoPasswordError"></span>
                    </div>

                    <button type="submit" class="login-button">Login</button>
                }
            </div>

            <div class="signup-link">
                <p>Don't have an account? <a href="@Url.Action("Registration", "Users")">Sign up</a></p>
            </div>
        </div>
    </div>
    <script>
        // Tab Switching
        document.querySelectorAll(".tab-button").forEach(button => {
            button.addEventListener("click", () => {
                document.querySelectorAll(".tab-button").forEach(btn => btn.classList.remove("active"));
                document.querySelectorAll(".tab-content").forEach(content => content.classList.remove("active"));

                button.classList.add("active");
                document.getElementById(button.dataset.tab + "-content").classList.add("active");
            });
        });

        // Toggle Passwords
        const togglePassword = (toggleId, inputId, iconId) => {
            document.getElementById(toggleId)?.addEventListener("click", () => {
                const input = document.getElementById(inputId);
                const icon = document.getElementById(iconId);
                input.type = input.type === "password" ? "text" : "password";
                icon.classList.toggle("fa-eye");
                icon.classList.toggle("fa-eye-slash");
            });
        };

        togglePassword("togglePassword", "Password", "eyeIcon");
        togglePassword("toggleNGOPassword", "NGOPassword", "ngoEyeIcon");

        // ✅ FIXED: Form Validation
        function validateForm(usernameId, passwordId, userErrorId, passErrorId) {
            const username = document.getElementById(usernameId).value.trim();
            const password = document.getElementById(passwordId).value.trim();
            const userError = document.getElementById(userErrorId);
            const passError = document.getElementById(passErrorId);
            let isValid = true;

            userError.innerText = "";
            passError.innerText = "";

            if (username.length < 5 || username.length > 20) {
                userError.innerText = "Username must be 5-20 characters.";
                isValid = false;
            }

            if (password.length < 6 || password.length > 20) {
                passError.innerText = "Password must be 6-20 characters.";
                isValid = false;
            }

            return isValid;
        }

        document.getElementById("donorForm").addEventListener("submit", function (e) {
            if (!validateForm("Username", "Password", "donorUsernameError", "donorPasswordError")) {
                e.preventDefault();
            }
        });

        document.getElementById("ngoForm").addEventListener("submit", function (e) {
            if (!validateForm("NGOUsername", "NGOPassword", "ngoUsernameError", "ngoPasswordError")) {
                e.preventDefault();
            }
        });
        document.querySelectorAll(".tab-button").forEach(button => {
            button.addEventListener("click", () => {
                // Remove "active" class from all buttons and tab contents
                document.querySelectorAll(".tab-button").forEach(btn => btn.classList.remove("active"));
                document.querySelectorAll(".tab-content").forEach(content => {
                    content.classList.remove("active");

                    // ✅ Clear form inputs in the tab being hidden
                    const form = content.querySelector("form");
                    if (form) form.reset();

                    // ✅ Clear validation errors (optional)
                    const errorSpans = content.querySelectorAll(".text-danger");
                    errorSpans.forEach(span => span.innerText = "");
                });

                // Add "active" class to clicked button and corresponding tab content
                button.classList.add("active");
                document.getElementById(button.dataset.tab + "-content").classList.add("active");
            });
        });
    </script>

</body>
</html>
